name: 0.0.$(Date:yyMM.d)$(Rev:rrr)

variables:
  - template: variables/msbuild.yml
  - template: variables/release.yml
  - template: variables/vs2019.yml

schedules:
- cron: "0 5 * * *" # 5AM Daily UTC (10PM Daily PST)
  displayName: Nightly master publish build
  branches:
    include:
      - master

- cron: "0 15 * * 1" # 3PM Monday UTC (8AM Monday PST)
  displayName: Weekly stable publish build
  branches:
    include:
      - "*-stable"

trigger: none
pr: none

jobs:
  - job: RnwNpmPublish
    displayName: React-Native-Windows Npm Build Rev Publish
    pool:
      vmImage: $(VmImage)
    timeoutInMinutes: 120
    cancelTimeoutInMinutes: 5
    steps:
      - checkout: self
        clean: true
        submodules: false
        persistCredentials: true

      - template: templates/configure-git.yml

      - template: templates/yarn-install.yml

      - task: CmdLine@2
        displayName: yarn build
        inputs:
          script: yarn build

      - task: CmdLine@2
        displayName: Beachball Publish
        inputs:
          script: npx --no-install beachball publish --branch origin/$(Build.SourceBranchName) -n $(npmAuthToken) -yes -m "applying package updates ***NO_CI***" --bump-deps  --access public $(extraPublishArgs)

      - task: CmdLine@2
        displayName: Create GitHub Release
        inputs:
          script: npx $(githubReleaseNpxArgs) @rnw-scripts/create-github-releases --authToken $(GITHUB_API)

      - task: CmdLine@2
        displayName: Set Version Env Vars
        name: setVersionEnvVars
        inputs:
          script: node ./.ado/setVersionEnvVars.js
        env:
          RUNNER_TEMP: $(Build.StagingDirectory)

      - task: PublishPipelineArtifact@1
        displayName: Publish VersionEnvVars
        inputs:
          targetPath: $(Build.StagingDirectory)/versionEnvVars
          artifactName: VersionEnvVars

  - job: RnwNativeBuildDesktop
    displayName: Build Desktop
    dependsOn: RnwNpmPublish
    strategy:
      matrix:
        X64Debug:
          BuildConfiguration: Debug
          BuildPlatform: x64
        X64Release:
          BuildConfiguration: Release
          BuildPlatform: x64
        X86Debug:
          BuildConfiguration: Debug
          BuildPlatform: x86
        X86Release:
          BuildConfiguration: Release
          BuildPlatform: x86
        ARM64Debug:
          BuildConfiguration: Debug
          BuildPlatform: ARM64
        ARM64Release:
          BuildConfiguration: Release
          BuildPlatform: ARM64

    pool:
      vmImage: $(VmImage)

    steps:
      - task: DownloadPipelineArtifact@2
        displayName: Download VersionEnvVars
        inputs:
          artifact: VersionEnvVars
          path: $(Build.StagingDirectory)/VersionEnvVars

      - task: CmdLine@2
        inputs:
          script: node $(Build.StagingDirectory)/versionEnvVars/versionEnvVars.js

      - template: templates/build-rnw.yml
        parameters:
          project: vnext/ReactWindows-Desktop.sln
          msbuildArguments:
            /p:RNW_PKG_VERSION_STR="$(RNW_PKG_VERSION_STR)"
            /p:RNW_PKG_VERSION_MAJOR="$(RNW_PKG_VERSION_MAJOR)"
            /p:RNW_PKG_VERSION_MINOR="$(RNW_PKG_VERSION_MINOR)"
            /p:RNW_PKG_VERSION_PATCH="$(RNW_PKG_VERSION_PATCH)"

      - template: templates/publish-build-artifacts-for-nuget.yml
        parameters:
          artifactName: ReactWindows
          contents: |
            React.Windows.Desktop.DLL\**
            React.Windows.Desktop.Test.DLL\**

  - job: RnwNativeBuildUniversal
    displayName: Build Universal
    dependsOn: RnwNpmPublish
    strategy:
      matrix:
        X64Debug:
          BuildConfiguration: Debug
          BuildPlatform: x64
          LayoutHeaders: true
        X86Debug:
          BuildConfiguration: Debug
          BuildPlatform: x86
        ArmDebug:
          BuildConfiguration: Debug
          BuildPlatform: arm
        Arm64Debug:
          BuildConfiguration: Debug
          BuildPlatform: arm64
        X64Release:
          BuildConfiguration: Release
          BuildPlatform: x64
        X86Release:
          BuildConfiguration: Release
          BuildPlatform: x86
        ArmRelease:
          BuildConfiguration: Release
          BuildPlatform: arm
        Arm64Release:
          BuildConfiguration: Release
          BuildPlatform: arm64
    pool:
      vmImage: $(VmImage)

    steps:
      - task: DownloadPipelineArtifact@2
        displayName: Download VersionEnvVars
        inputs:
          artifact: VersionEnvVars
          path: $(Build.StagingDirectory)/VersionEnvVars

      - task: CmdLine@2
        inputs:
          script: node $(Build.StagingDirectory)/versionEnvVars/versionEnvVars.js

      - template: templates/build-rnw.yml
        parameters:
          project: vnext/Microsoft.ReactNative.sln

      - template: templates/publish-build-artifacts-for-nuget.yml
        parameters:
          artifactName: ReactWindows
          layoutHeaders: eq('true', variables['LayoutHeaders'])
          contents: |
            Microsoft.ReactNative\**
            Microsoft.ReactNative.Managed\**
            Microsoft.ReactNative.Managed.CodeGen\**

    # Disable for now, not sure this works on github projects anyway.
    # - task: PublishSymbols@2
    #   displayName: 'Publish symbols path'
    #   inputs:
    #     SearchPattern: 'vnext/target/**/*.pdb'
    #     SymbolServerType: TeamServices
  - job: RNWNuget
    dependsOn:
      - RnwNpmPublish
      - RnwNativeBuildDesktop
      - RnwNativeBuildUniversal
    displayName: Sign Binaries and Publish NuGet
    pool:
      vmImage: $(VmImage)
      # Disable codesign for now, until we're sure
      # vmImage: Package ES Lab E

    steps:
      - checkout: none

      # Disable codesign for now, until we're sure
      # - task: PkgESSetupBuild@10
      #   displayName: 'XESSetupBuild'
      #   inputs:
      #     productName: microsoftreactnative
      #     branchVersion: false
      #     nugetVer: true

      - task: DownloadPipelineArtifact@2
        displayName: Download VersionEnvVars
        inputs:
          artifact: VersionEnvVars
          path: $(Build.StagingDirectory)/VersionEnvVars

      - task: CmdLine@2
        inputs:
          script: node $(Build.StagingDirectory)/VersionEnvVars/versionEnvVars.js

      # The commit tag in the nuspec requires that we use at least nuget 5.8 (because things break with nuget versions before and Vs 16.8 or later)
      - task: NuGetToolInstaller@0
        inputs:
          versionSpec: ">=5.8.0"

      - template: templates/prep-and-pack-nuget.yml
        parameters:
          publishCommitId: $(publishCommitId)
          npmVersion: $(npmVersion)
          # Disable codesign for now, until we're sure
          # signMicrosoft: true

      - task: PublishPipelineArtifact@1
        displayName: "Publish final nuget artifacts"
        inputs:
          targetPath: $(System.DefaultWorkingDirectory)\NugetRootFinal
          artifactName: "ReactWindows-final-nuget"
